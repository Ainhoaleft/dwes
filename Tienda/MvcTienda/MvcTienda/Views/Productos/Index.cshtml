@model PaginatedList<MvcTienda.Models.Producto>

@{
    ViewData["Title"] = "Index";
}
<head>
    <link rel="stylesheet" href="~/css/Productos.css" />
</head>

<h1>Productos</h1>

<p>
    <a asp-action="Create">Crear nuevo</a>
</p>

@* Agregar un cuadro de búsqueda en la vista Index de Avisos *@
<form asp-action="Index">
    <div class="container">
        <div class="row align-items-start">
            <div class="col-md">
                <label class="control-label">Nombre de Descripcion:</label>
                <input type="text" name="strCadenaBusqueda"
                       value="@ViewData["BusquedaActual"]" class="form-control" />
            </div>
           
            <div class="col-md align-self-end">
                <input type="submit" value="Buscar" class="btn btn-default" /> |
                <a asp-action="Index" class="btn btn-default">Lista completa</a>
            </div> 
           
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                 Descripcion
                @*@Html.DisplayNameFor(model => model.Descripcion)*@
            </th>
            <th>
                Texto
                @* @Html.DisplayNameFor(model => model.Texto)*@
            </th>
            @* <th>
                Precio
                @Html.DisplayNameFor(model => model.Precio)
            </th>*@
            
            <th>
                Precio
                @* @Html.DisplayNameFor(model => model.PrecioCadena)*@
            </th>
            
            <th>
                Stock
                @* @Html.DisplayNameFor(model => model.Stock)*@
            </th>
            <th>
                Escaparate
                @*  @Html.DisplayNameFor(model => model.Escaparate)*@
            </th>
            <th>
                Imagen
                @* @Html.DisplayNameFor(model => model.Imagen)*@
            </th>
            <th>
                Categoria
                @*  @Html.DisplayNameFor(model => model.Categoria)*@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Texto)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Precio)
            </td>
            @*
            <td>
                @Html.DisplayFor(modelItem => item.PrecioCadena)
            </td>
            *@
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
                <td>
                   @* @Html.DisplayFor(modelItem => item.Escaparate)*@
                    @{
                        string Verdadero = "Visible";
                        if (item.Escaparate == true)
                        {
                            Verdadero = "Visible";
                        }
                        else
                        {
                            Verdadero = "No visible";
                        }
                    }
                    @Verdadero
                </td>
                <td>
                    @{
                        string Imagen = "ImagenDefault.jpg";
                        if (item.Imagen != null)
                        {
                            Imagen = item.Imagen;
                        }
                    }
                    <img class="Imagen" src="~/imagenes/@Imagen" />
                </td>
           @*     
            <td>
                   
                @Html.DisplayFor(modelItem => item.Imagen)
                  
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Categoria.Descripcion)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Eliminar</a> |
                <a asp-action="CambiarImagen" asp-route-id="@item.Id">Cambiar imagen</a> 
            </td>
        </tr>
}
    </tbody>
</table>

@* Poner botones de página Siguiente y Anterior *@
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-outline-secondary @prevDisabled">
    Anterior
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-outline-secondary @nextDisabled">
    Siguiente
</a>

